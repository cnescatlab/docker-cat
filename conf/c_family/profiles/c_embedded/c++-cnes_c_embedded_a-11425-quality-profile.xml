<?xml version='1.0' encoding='UTF-8'?>
<profile>
    <name>CNES_C_EMBEDDED_A</name>
    <language>c++</language>
    <rules>
        <rule>
            <repositoryKey>common-c++</repositoryKey>
            <key>FailedUnitTests</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>common-c++</repositoryKey>
            <key>InsufficientCommentDensity</key>
            <priority>CRITICAL</priority>
            <parameters>
                <parameter>
                    <key>minimumCommentDensity</key>
                    <value>30</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>argumentSize</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>arithOperationsOnVoidPointer</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>arrayIndexOutOfBounds</key>
            <priority>BLOCKER</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>arrayIndexOutOfBoundsCond</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>arrayIndexThenCheck</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>assertWithSideEffect</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>assignBoolToFloat</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>assignBoolToPointer</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>autoVariables</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>autovarInvalidDeallocation</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>badBitmaskCheck</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>boostForeachError</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>bufferAccessOutOfBounds</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>charBitOp</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>charLiteralWithCharPtrCompare</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>checkCastIntToCharAndBack</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>comparisonOfBoolWithBoolError</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>comparisonOfFuncReturningBoolError</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>comparisonOfTwoFuncsReturningBoolError</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>dangerousUsageStrtol</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>deallocDealloc</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>deallocret</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>deallocuse</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>doubleCloseDir</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>doubleFree</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>duplicateBranch</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>duplicateExpression</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>duplicateExpressionTernary</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>eraseDereference</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptDeallocThrow</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptThrowInAttributeNoThrowFunction</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptThrowInDeclspecNoThrowFunction</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptThrowInDestructor</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptThrowInNoThrowFunction</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>exceptThrowInNoexecptFunction</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>floatConversionOverflow</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>incorrectLogicOperator</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>incorrectStringBooleanError</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>insecureCmdLineArgs</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>integerOverflow</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidFree</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidFunctionArg</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidFunctionArgBool</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidIterator1</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidIterator2</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidLengthModifierError</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPointer</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_float</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_int</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_n</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_p</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_s</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_sint</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidPrintfArgType_uint</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidScanfArgType</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidScanfArgType_float</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidScanfArgType_int</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidScanfFormatWidth</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidTestForOverflow</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidscanf</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>invalidscanf_libc</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>iterators</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>knownConditionTrueFalse</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>leakNoVarFunctionCall</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>literalWithCharPtrCompare</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>mallocOnClassError</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>memleak</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>memleakOnRealloc</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>memsetValueOutOfRange</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>mismatchAllocDealloc</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>mismatchSize</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>mismatchingContainers</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>nanInArithmeticExpression</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>negativeArraySize</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>negativeIndex</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>negativeMemoryAllocationSize</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>noConstructor</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>nullPointer</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>nullPointerArithmetic</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>nullPointerDefaultArg</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>nullPointerRedundantCheck</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>operatorEqMissingReturnStatement</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>outOfBounds</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>pointerArithBool</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>pointerLessThanZero</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>pointerOutOfBounds</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>pointerPositive</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>possibleBufferAccessOutOfBounds</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>redundantAssignInSwitch</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>redundantCondition</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>resourceLeak</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>returnAddressOfAutoVariable</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>returnAddressOfFunctionParameter</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>returnLocalVariable</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>returnReference</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>returnTempReference</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>seekOnAppendedFile</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>selfAssignment</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>selfInitialization</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>shiftNegative</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>shiftNegativeLHS</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>shiftTooManyBits</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>sizeofCalculation</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>sizeofVoid</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>sprintfOverlappingData</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>stlOutOfBounds</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>stlcstrthrow</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>stringLiteralWrite</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>throwInNoexceptFunction</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>tooBigSleepTime</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>udivError</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unassignedVariable</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uninitMemberVar</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uninitStructMember</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uninitdata</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uninitstring</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uninitvar</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unknownEvaluationOrder</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unpreciseMathCall</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unreachableCode</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unsignedLessThanZero</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>unsignedPositive</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>useClosedFile</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uselessAssignmentArg</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>uselessAssignmentPtrArg</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>va_end_missing</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>va_start_referencePassed</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>va_start_subsequentCalls</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>varFuncNullUB</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>variableHidingEnum</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>variableHidingTypedef</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>writeOutsideBufferSize</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>wrongPipeParameterSize</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>wrongPrintfScanfArgNum</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>wrongPrintfScanfParameterPositionError</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>wrongcctypecall</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>zerodiv</key>
            <priority>CRITICAL</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cppcheck</repositoryKey>
            <key>zerodivcond</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>CommentedCode</key>
            <priority>BLOCKER</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>FunctionComplexity</key>
            <priority>CRITICAL</priority>
            <parameters>
                <parameter>
                    <key>max</key>
                    <value>10</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>HardcodedAccount</key>
            <priority>BLOCKER</priority>
            <parameters>
                <parameter>
                    <key>regularExpression</key>
                    <value>\bDSN\b.*=.*;\b(UID|PWD)\b=.*;</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>HardcodedIp</key>
            <priority>CRITICAL</priority>
            <parameters>
                <parameter>
                    <key>regularExpression</key>
                    <value>^.*((?&lt;![\d|\.])(?:\b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b\.){3}\b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b(?!\d|\.)).*$</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>MagicNumber</key>
            <priority>MAJOR</priority>
            <parameters>
                <parameter>
                    <key>exceptions</key>
                    <value>0,1,0x0,0x00,.0,.1,0.0,1.0,0u,1u,0ul,1ul,1.0f,0.0f,0LL,1LL,0ULL,1ULL</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>MissingCurlyBraces</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>NestedStatements</key>
            <priority>CRITICAL</priority>
            <parameters>
                <parameter>
                    <key>max</key>
                    <value>5</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>SwitchLastCaseIsDefault</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>TabCharacter</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>createLineViolation</key>
                    <value>false</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>TooLongLine</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>maximumLineLength</key>
                    <value>100</value>
                </parameter>
                <parameter>
                    <key>tabWidth</key>
                    <value>4</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>TooManyLinesOfCodeInFunction</key>
            <priority>MAJOR</priority>
            <parameters>
                <parameter>
                    <key>max</key>
                    <value>60</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>TooManyStatementsPerLine</key>
            <priority>MAJOR</priority>
            <parameters>
                <parameter>
                    <key>excludeCaseBreak</key>
                    <value>false</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>cxx</repositoryKey>
            <key>UndocumentedApi</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>L002</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>L004</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>T002</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>T003</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>T008</key>
            <priority>MINOR</priority>
            <parameters />
        </rule>
        <rule>
            <repositoryKey>vera++</repositoryKey>
            <key>T019</key>
            <priority>MAJOR</priority>
            <parameters />
        </rule>
    </rules>
</profile>
